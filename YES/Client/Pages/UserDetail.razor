@page "/CustomerDetail"
@inject ICustomerService customerService

<div class="page-bg">

    @if (Customer != null)
    {

        <section>
            <div class="mb-4">
                <input @bind="LoggedInCustomerId" /><button class="btn btn-outline-light" @onclick="() => GetUserWithId(LoggedInCustomerId)">Set Current User</button>
            </div>
            
            <h3 class="mb-4">Customer Form</h3>
            <div class="mb-4">
                @if (Customer != null)
                {
                    <CustomerForm Customer="Customer"></CustomerForm>
                }
            </div>
            

            <hr />
            <h3 class="mb-3">Ticket List</h3>
            @if (Tickets != null)
            {
                <div class="row mb-4 ticket-overview-header">
                    <div class="col">
                        Purchased On
                    </div>
                    <div class="col">
                        Event Date
                    </div>
                    <div class="col">
                        Category
                    </div>
                    <div class="col">
                        Price
                    </div>

                    <div class="col">
                        Event Name
                    </div>
                    <div class="col">
                        Event Location
                    </div>

                </div>
                @foreach (var ticket in Customer.Tickets)
                {
                    <div class="row ticket-item">
                        <TicketOverview Ticket="ticket"></TicketOverview>                            
                    </div>
                    
                }

            }
        </section>

    }
    
</div>
            

@code {
    [Parameter]
    public CustomerWithTicketsDto Customer { get; set; }

    public List<TicketDto> Tickets { get; set; }

    public int LoggedInCustomerId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        LoggedInCustomerId = customerService.GetLoggedInUser();
        Customer = await customerService.GetCustomerByIdAsync(LoggedInCustomerId);
        Tickets = Customer.Tickets.ToList();
    }

    private async Task GetUserWithId(int id)
    {
        Customer = await customerService.GetCustomerByIdAsync(id);
    }

}
